{"version":3,"sources":["../../../src/crypto/store/base.js"],"names":[],"mappings":"AAAA;;;;;;AAMA;;;;;;AAMA","file":"base.js","sourcesContent":["/**\n * Internal module. Defintions for storage for the crypto module\n *\n * @module\n */\n\n/**\n * Abstraction of things that can store data required for end-to-end encryption\n *\n * @interface CryptoStore\n */\n\n/**\n * Represents an outgoing room key request\n *\n * @typedef {Object} OutgoingRoomKeyRequest\n *\n * @property {string} requestId    unique id for this request. Used for both\n *    an id within the request for later pairing with a cancellation, and for\n *    the transaction id when sending the to_device messages to our local\n *    server.\n *\n * @property {string?} cancellationTxnId\n *    transaction id for the cancellation, if any\n *\n * @property {Array<{userId: string, deviceId: string}>} recipients\n *    list of recipients for the request\n *\n * @property {module:crypto~RoomKeyRequestBody} requestBody\n *    parameters for the request.\n *\n * @property {Number} state   current state of this request (states are defined\n *    in {@link module:crypto/OutgoingRoomKeyRequestManager~ROOM_KEY_REQUEST_STATES})\n */\n"]}