{"version":3,"sources":["../../../src/crypto/store/localStorage-crypto-store.js"],"names":["E2E_PREFIX","KEY_END_TO_END_ACCOUNT","KEY_DEVICE_DATA","KEY_INBOUND_SESSION_PREFIX","KEY_ROOMS_PREFIX","keyEndToEndSessions","deviceKey","keyEndToEndInboundGroupSession","senderKey","sessionId","keyEndToEndRoomsPrefix","roomId","LocalStorageCryptoStore","webStore","store","txn","func","count","i","length","key","startsWith","getJsonItem","sessions","_getEndToEndSessions","session","setJsonItem","senderCurve25519Key","substr","sessionData","existing","storeEndToEndInboundGroupSession","deviceData","roomInfo","result","prefix","removeItem","resolve","account","newData","mode","stores","JSON","parse","getItem","e","console","log","stack","val","setItem"],"mappings":"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","file":"localStorage-crypto-store.js","sourcesContent":["/*\nCopyright 2017, 2018 New Vector Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport Promise from 'bluebird';\nimport MemoryCryptoStore from './memory-crypto-store.js';\n\n/**\n * Internal module. Partial localStorage backed storage for e2e.\n * This is not a full crypto store, just the in-memory store with\n * some things backed by localStorage. It exists because indexedDB\n * is broken in Firefox private mode or set to, \"will not remember\n * history\".\n *\n * @module\n */\n\nconst E2E_PREFIX = \"crypto.\";\nconst KEY_END_TO_END_ACCOUNT = E2E_PREFIX + \"account\";\nconst KEY_DEVICE_DATA = E2E_PREFIX + \"device_data\";\nconst KEY_INBOUND_SESSION_PREFIX = E2E_PREFIX + \"inboundgroupsessions/\";\nconst KEY_ROOMS_PREFIX = E2E_PREFIX + \"rooms/\";\n\nfunction keyEndToEndSessions(deviceKey) {\n    return E2E_PREFIX + \"sessions/\" + deviceKey;\n}\n\nfunction keyEndToEndInboundGroupSession(senderKey, sessionId) {\n    return KEY_INBOUND_SESSION_PREFIX + senderKey + \"/\" + sessionId;\n}\n\nfunction keyEndToEndRoomsPrefix(roomId) {\n    return KEY_ROOMS_PREFIX + roomId;\n}\n\n/**\n * @implements {module:crypto/store/base~CryptoStore}\n */\nexport default class LocalStorageCryptoStore extends MemoryCryptoStore {\n    constructor(webStore) {\n        super();\n        this.store = webStore;\n    }\n\n    // Olm Sessions\n\n    countEndToEndSessions(txn, func) {\n        let count = 0;\n        for (let i = 0; i < this.store.length; ++i) {\n            if (this.store.key(i).startsWith(keyEndToEndSessions(''))) ++count;\n        }\n        func(count);\n    }\n\n    _getEndToEndSessions(deviceKey, txn, func) {\n        return getJsonItem(this.store, keyEndToEndSessions(deviceKey));\n    }\n\n    getEndToEndSession(deviceKey, sessionId, txn, func) {\n        const sessions = this._getEndToEndSessions(deviceKey);\n        func(sessions[sessionId] || {});\n    }\n\n    getEndToEndSessions(deviceKey, txn, func) {\n        func(this._getEndToEndSessions(deviceKey) || {});\n    }\n\n    storeEndToEndSession(deviceKey, sessionId, session, txn) {\n        const sessions = this._getEndToEndSessions(deviceKey) || {};\n        sessions[sessionId] = session;\n        setJsonItem(\n            this.store, keyEndToEndSessions(deviceKey), sessions,\n        );\n    }\n\n    // Inbound Group Sessions\n\n    getEndToEndInboundGroupSession(senderCurve25519Key, sessionId, txn, func) {\n        func(getJsonItem(\n            this.store,\n            keyEndToEndInboundGroupSession(senderCurve25519Key, sessionId),\n        ));\n    }\n\n    getAllEndToEndInboundGroupSessions(txn, func) {\n        for (let i = 0; i < this.store.length; ++i) {\n            const key = this.store.key(i);\n            if (key.startsWith(KEY_INBOUND_SESSION_PREFIX)) {\n                // we can't use split, as the components we are trying to split out\n                // might themselves contain '/' characters. We rely on the\n                // senderKey being a (32-byte) curve25519 key, base64-encoded\n                // (hence 43 characters long).\n\n                func({\n                    senderKey: key.substr(KEY_INBOUND_SESSION_PREFIX.length, 43),\n                    sessionId: key.substr(KEY_INBOUND_SESSION_PREFIX.length + 44),\n                    sessionData: getJsonItem(this.store, key),\n                });\n            }\n        }\n        func(null);\n    }\n\n    addEndToEndInboundGroupSession(senderCurve25519Key, sessionId, sessionData, txn) {\n        const existing = getJsonItem(\n            this.store,\n            keyEndToEndInboundGroupSession(senderCurve25519Key, sessionId),\n        );\n        if (!existing) {\n            this.storeEndToEndInboundGroupSession(\n                senderCurve25519Key, sessionId, sessionData, txn,\n            );\n        }\n    }\n\n    storeEndToEndInboundGroupSession(senderCurve25519Key, sessionId, sessionData, txn) {\n        setJsonItem(\n            this.store,\n            keyEndToEndInboundGroupSession(senderCurve25519Key, sessionId),\n            sessionData,\n        );\n    }\n\n    getEndToEndDeviceData(txn, func) {\n        func(getJsonItem(\n            this.store, KEY_DEVICE_DATA,\n        ));\n    }\n\n    storeEndToEndDeviceData(deviceData, txn) {\n        setJsonItem(\n            this.store, KEY_DEVICE_DATA, deviceData,\n        );\n    }\n\n    storeEndToEndRoom(roomId, roomInfo, txn) {\n        setJsonItem(\n            this.store, keyEndToEndRoomsPrefix(roomId), roomInfo,\n        );\n    }\n\n    getEndToEndRooms(txn, func) {\n        const result = {};\n        const prefix = keyEndToEndRoomsPrefix('');\n\n        for (let i = 0; i < this.store.length; ++i) {\n            const key = this.store.key(i);\n            if (key.startsWith(prefix)) {\n                const roomId = key.substr(prefix.length);\n                result[roomId] = getJsonItem(this.store, key);\n            }\n        }\n        func(result);\n    }\n\n    /**\n     * Delete all data from this store.\n     *\n     * @returns {Promise} Promise which resolves when the store has been cleared.\n     */\n    deleteAllData() {\n        this.store.removeItem(KEY_END_TO_END_ACCOUNT);\n        return Promise.resolve();\n    }\n\n    // Olm account\n\n    getAccount(txn, func) {\n        const account = getJsonItem(this.store, KEY_END_TO_END_ACCOUNT);\n        func(account);\n    }\n\n    storeAccount(txn, newData) {\n        setJsonItem(\n            this.store, KEY_END_TO_END_ACCOUNT, newData,\n        );\n    }\n\n    doTxn(mode, stores, func) {\n        return Promise.resolve(func(null));\n    }\n}\n\nfunction getJsonItem(store, key) {\n    try {\n        // if the key is absent, store.getItem() returns null, and\n        // JSON.parse(null) === null, so this returns null.\n        return JSON.parse(store.getItem(key));\n    } catch (e) {\n        console.log(\"Error: Failed to get key %s: %s\", key, e.stack || e);\n        console.log(e.stack);\n    }\n    return null;\n}\n\nfunction setJsonItem(store, key, val) {\n    store.setItem(key, JSON.stringify(val));\n}\n"]}