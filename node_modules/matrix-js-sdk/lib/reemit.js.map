{"version":3,"sources":["../src/reemit.js"],"names":["reEmit","reEmitEntity","emittableEntity","eventNames","eventName","on","args","emit"],"mappings":";;;;;kBA+BwBA,M;AA/BxB;;;;;;;;;;;;;;;;;AAiBA;;;;AAIA;;;;;;;;;;AAUe,SAASA,MAAT,CAAgBC,YAAhB,EAA8BC,eAA9B,EAA+CC,UAA/C,EAA2D;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,gBAC3DC,SAD2D;;AAElE;AACAF,4BAAgBG,EAAhB,CAAmBD,SAAnB,EAA8B,YAAkB;AAAA,kDAANE,IAAM;AAANA,wBAAM;AAAA;;AAC5C;AACA;AACA;AACA;AACA;AACAL,6BAAaM,IAAb,sBAAkBH,SAAlB,SAAgCE,IAAhC;AACH,aAPD;AAHkE;;AACtE,6BAAwBH,UAAxB,8HAAoC;AAAA;AAUnC;AAXqE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYzE","file":"reemit.js","sourcesContent":["/*\nCopyright 2015, 2016 OpenMarket Ltd\nCopyright 2017 Vector Creations Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\n/**\n * @module\n */\n\n/**\n * re-emit events raised by one EventEmitter from another\n *\n * @param {external:EventEmitter} reEmitEntity\n *     entity from which we want events to be emitted\n * @param {external:EventEmitter} emittableEntity\n *     entity from which events are currently emitted\n * @param {Array<string>} eventNames\n *     list of events to be reemitted\n */\nexport default function reEmit(reEmitEntity, emittableEntity, eventNames) {\n    for (const eventName of eventNames) {\n        // setup a listener on the entity (the Room, User, etc) for this event\n        emittableEntity.on(eventName, function(...args) {\n            // take the args from the listener and reuse them, adding the\n            // event name to the arg list so it works with .emit()\n            // Transformation Example:\n            // listener on \"foo\" => function(a,b) { ... }\n            // Re-emit on \"thing\" => thing.emit(\"foo\", a, b)\n            reEmitEntity.emit(eventName, ...args);\n        });\n    }\n}\n"]}