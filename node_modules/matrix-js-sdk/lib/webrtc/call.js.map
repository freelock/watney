{"version":3,"sources":["../../src/webrtc/call.js"],"names":["utils","require","EventEmitter","DEBUG","MatrixCall","opts","roomId","client","webRtc","URL","turnServers","length","push","urls","FALLBACK_STUN_SERVER","forEach","server","checkObjectHasKeys","callId","Date","getTime","state","didConnect","candidateSendQueue","candidateSendTries","mediaPromises","Object","create","screenSharingStream","CALL_TIMEOUT_MS","ERR_LOCAL_OFFER_FAILED","ERR_NO_USER_MEDIA","inherits","prototype","placeVoiceCall","debuglog","checkForErrorListener","_placeCallWithConstraints","_getUserMediaVideoContraints","type","placeVideoCall","remoteVideoElement","localVideoElement","_tryPlayRemoteStream","placeScreenSharingCall","screenConstraints","_getChromeScreenSharingConstraints","self","getUserMedia","stream","audioConstraints","err","emit","callError","playElement","element","queueId","console","log","then","play","pauseElement","pause","assignElement","srcObject","getLocalVideoElement","getRemoteVideoElement","getRemoteAudioElement","remoteAudioElement","setLocalVideoElement","localAVStream","autoplay","muted","setTimeout","vel","setRemoteVideoElement","setRemoteAudioElement","_tryPlayRemoteAudioStream","_initWithInvite","event","msg","getContent","peerConn","_createPeerConnection","setRemoteDescription","RtcSessionDescription","offer","hookCallback","_onSetRemoteDescriptionSuccess","_onSetRemoteDescriptionError","setState","direction","sdp","indexOf","getAge","hangupParty","stopAllMedia","signalingState","close","lifetime","_initWithHangup","answer","waitForLocalAVStream","_gotUserMediaForAnswer","_getUserMediaFailed","_replacedBy","newCall","successor","hangup","reason","suppressEvent","terminate","content","version","call_id","sendEvent","setLocalVideoMuted","setTracksEnabled","getVideoTracks","isLocalVideoMuted","isTracksEnabled","setMicrophoneMuted","getAudioTracks","isMicrophoneMuted","_gotUserMediaForInvite","videoEl","addTrack","addStream","createOffer","_gotLocalOffer","_getLocalOfferFailed","localVidEl","constraints","createAnswer","description","setLocalDescription","localDescription","_gotLocalIceCandidate","candidate","sdpMid","c","sdpMLineIndex","sendCandidate","_gotRemoteIceCandidate","cand","addIceCandidate","RtcIceCandidate","e","_receivedAnswer","error","_onIceConnectionStateChanged","iceConnectionState","_onSignallingStateChanged","_onAddStream","id","s","remoteAVStream","remoteAStream","forAllTracksOnStream","t","onstarted","_onRemoteStreamTrackStarted","oninactive","undefined","_onRemoteStreamEnded","onended","_onRemoteStreamStarted","_onHangupReceived","_onAnsweredElsewhere","tracks","enabled","i","oldState","eventType","catch","_sendCandidateQueue","hangupReason","shouldEmit","stop","player","isOpenWebRTC","ael","listeners","Error","code","arguments","cands","candidates","delayMs","Math","pow","callList","config","servers","vendor","j","url","username","credential","pc","RtcPeerConnection","iceServers","oniceconnectionstatechange","onsignalingstatechange","onicecandidate","onaddstream","call","screen","global","video","mandatory","chromeMediaSource","chromeMediaSourceId","now","maxWidth","width","maxHeight","height","minFrameRate","maxFrameRate","callType","audio","minWidth","minHeight","fn","apply","forAllVideoTracksOnStream","f","forAllAudioTracksOnStream","module","exports","createNewMatrixCall","w","window","doc","document","scripts","getElementById","src","navigator","webkitGetUserMedia","mozGetUserMedia","RTCPeerConnection","webkitRTCPeerConnection","mozRTCPeerConnection","RTCSessionDescription","webkitRTCSessionDescription","mozRTCSessionDescription","RTCIceCandidate","webkitRTCIceCandidate","mozRTCIceCandidate","getTurnServers"],"mappings":"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","file":"call.js","sourcesContent":["/*\nCopyright 2015, 2016 OpenMarket Ltd\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\"use strict\";\n/**\n * This is an internal module. See {@link createNewMatrixCall} for the public API.\n * @module webrtc/call\n */\nconst utils = require(\"../utils\");\nconst EventEmitter = require(\"events\").EventEmitter;\nconst DEBUG = true;  // set true to enable console logging.\n\n// events: hangup, error(err), replaced(call), state(state, oldState)\n\n/**\n * Fires when the MatrixCall encounters an error when sending a Matrix event.\n * <p>\n * This is required to allow errors, which occur during sending of events, to bubble up.\n * (This is because call.js does a hangup when it encounters a normal `error`, which in\n * turn could lead to an UnknownDeviceError.)\n * <p>\n * To deal with an UnknownDeviceError when trying to send events, the application should let\n * users know that there are new devices in the encrypted room (into which the event was\n * sent) and give the user the options to resend unsent events or cancel them. Resending\n * is done using {@link module:client~MatrixClient#resendEvent} and cancelling can be done by using\n * {@link module:client~MatrixClient#cancelPendingEvent}.\n * <p>\n * MatrixCall will not do anything in response to an error that causes `send_event_error`\n * to be emitted with the exception of sending `m.call.candidates`, which is retried upon\n * failure when ICE candidates are being sent. This happens during call setup.\n *\n * @event module:webrtc/call~MatrixCall#\"send_event_error\"\n * @param {Error} err The error caught from calling client.sendEvent in call.js.\n * @example\n * matrixCall.on(\"send_event_error\", function(err){\n *   console.error(err);\n * });\n */\n\n/**\n * Fires whenever an error occurs when call.js encounters an issue with setting up the call.\n * <p>\n * The error given will have a code equal to either `MatrixCall.ERR_LOCAL_OFFER_FAILED` or\n * `MatrixCall.ERR_NO_USER_MEDIA`. `ERR_LOCAL_OFFER_FAILED` is emitted when the local client\n * fails to create an offer. `ERR_NO_USER_MEDIA` is emitted when the user has denied access\n * to their audio/video hardware.\n *\n * @event module:webrtc/call~MatrixCall#\"error\"\n * @param {Error} err The error raised by MatrixCall.\n * @example\n * matrixCall.on(\"error\", function(err){\n *   console.error(err.code, err);\n * });\n */\n\n/**\n * Construct a new Matrix Call.\n * @constructor\n * @param {Object} opts Config options.\n * @param {string} opts.roomId The room ID for this call.\n * @param {Object} opts.webRtc The WebRTC globals from the browser.\n * @param {Object} opts.URL The URL global.\n * @param {Array<Object>} opts.turnServers Optional. A list of TURN servers.\n * @param {MatrixClient} opts.client The Matrix Client instance to send events to.\n */\nfunction MatrixCall(opts) {\n    this.roomId = opts.roomId;\n    this.client = opts.client;\n    this.webRtc = opts.webRtc;\n    this.URL = opts.URL;\n    // Array of Objects with urls, username, credential keys\n    this.turnServers = opts.turnServers || [];\n    if (this.turnServers.length === 0) {\n        this.turnServers.push({\n            urls: [MatrixCall.FALLBACK_STUN_SERVER],\n        });\n    }\n    utils.forEach(this.turnServers, function(server) {\n        utils.checkObjectHasKeys(server, [\"urls\"]);\n    });\n\n    this.callId = \"c\" + new Date().getTime();\n    this.state = 'fledgling';\n    this.didConnect = false;\n\n    // A queue for candidates waiting to go out.\n    // We try to amalgamate candidates into a single candidate message where\n    // possible\n    this.candidateSendQueue = [];\n    this.candidateSendTries = 0;\n\n    // Lookup from opaque queue ID to a promise for media element operations that\n    // need to be serialised into a given queue.  Store this per-MatrixCall on the\n    // assumption that multiple matrix calls will never compete for control of the\n    // same DOM elements.\n    this.mediaPromises = Object.create(null);\n\n    this.screenSharingStream = null;\n}\n/** The length of time a call can be ringing for. */\nMatrixCall.CALL_TIMEOUT_MS = 60000;\n/** The fallback server to use for STUN. */\nMatrixCall.FALLBACK_STUN_SERVER = 'stun:stun.l.google.com:19302';\n/** An error code when the local client failed to create an offer. */\nMatrixCall.ERR_LOCAL_OFFER_FAILED = \"local_offer_failed\";\n/**\n * An error code when there is no local mic/camera to use. This may be because\n * the hardware isn't plugged in, or the user has explicitly denied access.\n */\nMatrixCall.ERR_NO_USER_MEDIA = \"no_user_media\";\n\nutils.inherits(MatrixCall, EventEmitter);\n\n/**\n * Place a voice call to this room.\n * @throws If you have not specified a listener for 'error' events.\n */\nMatrixCall.prototype.placeVoiceCall = function() {\n    debuglog(\"placeVoiceCall\");\n    checkForErrorListener(this);\n    _placeCallWithConstraints(this, _getUserMediaVideoContraints('voice'));\n    this.type = 'voice';\n};\n\n/**\n * Place a video call to this room.\n * @param {Element} remoteVideoElement a <code>&lt;video&gt;</code> DOM element\n * to render video to.\n * @param {Element} localVideoElement a <code>&lt;video&gt;</code> DOM element\n * to render the local camera preview.\n * @throws If you have not specified a listener for 'error' events.\n */\nMatrixCall.prototype.placeVideoCall = function(remoteVideoElement, localVideoElement) {\n    debuglog(\"placeVideoCall\");\n    checkForErrorListener(this);\n    this.localVideoElement = localVideoElement;\n    this.remoteVideoElement = remoteVideoElement;\n    _placeCallWithConstraints(this, _getUserMediaVideoContraints('video'));\n    this.type = 'video';\n    _tryPlayRemoteStream(this);\n};\n\n/**\n * Place a screen-sharing call to this room. This includes audio.\n * <b>This method is EXPERIMENTAL and subject to change without warning. It\n * only works in Google Chrome.</b>\n * @param {Element} remoteVideoElement a <code>&lt;video&gt;</code> DOM element\n * to render video to.\n * @param {Element} localVideoElement a <code>&lt;video&gt;</code> DOM element\n * to render the local camera preview.\n * @throws If you have not specified a listener for 'error' events.\n */\nMatrixCall.prototype.placeScreenSharingCall =\n    function(remoteVideoElement, localVideoElement) {\n    debuglog(\"placeScreenSharingCall\");\n    checkForErrorListener(this);\n    const screenConstraints = _getChromeScreenSharingConstraints(this);\n    if (!screenConstraints) {\n        return;\n    }\n    this.localVideoElement = localVideoElement;\n    this.remoteVideoElement = remoteVideoElement;\n    const self = this;\n    this.webRtc.getUserMedia(screenConstraints, function(stream) {\n        self.screenSharingStream = stream;\n        debuglog(\"Got screen stream, requesting audio stream...\");\n        const audioConstraints = _getUserMediaVideoContraints('voice');\n        _placeCallWithConstraints(self, audioConstraints);\n    }, function(err) {\n        self.emit(\"error\",\n            callError(\n                MatrixCall.ERR_NO_USER_MEDIA,\n                \"Failed to get screen-sharing stream: \" + err,\n            ),\n        );\n    });\n    this.type = 'video';\n    _tryPlayRemoteStream(this);\n};\n\n/**\n * Play the given HTMLMediaElement, serialising the operation into a chain\n * of promises to avoid racing access to the element\n * @param {Element} element HTMLMediaElement element to play\n * @param {string} queueId Arbitrary ID to track the chain of promises to be used\n */\nMatrixCall.prototype.playElement = function(element, queueId) {\n    console.log(\"queuing play on \" + queueId + \" and element \" + element);\n    // XXX: FIXME: Does this leak elements, given the old promises\n    // may hang around and retain a reference to them?\n    if (this.mediaPromises[queueId]) {\n        // XXX: these promises can fail (e.g. by <video/> being unmounted whilst\n        // pending receiving media to play - e.g. whilst switching between\n        // rooms before answering an inbound call), and throw unhandled exceptions.\n        // However, we should soldier on as best we can even if they fail, given\n        // these failures may be non-fatal (as in the case of unmounts)\n        this.mediaPromises[queueId] =\n            this.mediaPromises[queueId].then(function() {\n                console.log(\"previous promise completed for \" + queueId);\n                return element.play();\n            }, function() {\n                console.log(\"previous promise failed for \" + queueId);\n                return element.play();\n            });\n    } else {\n        this.mediaPromises[queueId] = element.play();\n    }\n};\n\n/**\n * Pause the given HTMLMediaElement, serialising the operation into a chain\n * of promises to avoid racing access to the element\n * @param {Element} element HTMLMediaElement element to pause\n * @param {string} queueId Arbitrary ID to track the chain of promises to be used\n */\nMatrixCall.prototype.pauseElement = function(element, queueId) {\n    console.log(\"queuing pause on \" + queueId + \" and element \" + element);\n    if (this.mediaPromises[queueId]) {\n        this.mediaPromises[queueId] =\n            this.mediaPromises[queueId].then(function() {\n                console.log(\"previous promise completed for \" + queueId);\n                return element.pause();\n            }, function() {\n                console.log(\"previous promise failed for \" + queueId);\n                return element.pause();\n            });\n    } else {\n        // pause doesn't actually return a promise, but do this for symmetry\n        // and just in case it does in future.\n        this.mediaPromises[queueId] = element.pause();\n    }\n};\n\n/**\n * Assign the given HTMLMediaElement by setting the .src attribute on it,\n * serialising the operation into a chain of promises to avoid racing access\n * to the element\n * @param {Element} element HTMLMediaElement element to pause\n * @param {MediaStream} srcObject the srcObject attribute value to assign to the element\n * @param {string} queueId Arbitrary ID to track the chain of promises to be used\n */\nMatrixCall.prototype.assignElement = function(element, srcObject, queueId) {\n    console.log(\"queuing assign on \" + queueId + \" element \" + element + \" for \" +\n        srcObject);\n    if (this.mediaPromises[queueId]) {\n        this.mediaPromises[queueId] =\n            this.mediaPromises[queueId].then(function() {\n                console.log(\"previous promise completed for \" + queueId);\n                element.srcObject = srcObject;\n            }, function() {\n                console.log(\"previous promise failed for \" + queueId);\n                element.srcObject = srcObject;\n            });\n    } else {\n        element.srcObject = srcObject;\n    }\n};\n\n/**\n * Retrieve the local <code>&lt;video&gt;</code> DOM element.\n * @return {Element} The dom element\n */\nMatrixCall.prototype.getLocalVideoElement = function() {\n    return this.localVideoElement;\n};\n\n/**\n * Retrieve the remote <code>&lt;video&gt;</code> DOM element\n * used for playing back video capable streams.\n * @return {Element} The dom element\n */\nMatrixCall.prototype.getRemoteVideoElement = function() {\n    return this.remoteVideoElement;\n};\n\n/**\n * Retrieve the remote <code>&lt;audio&gt;</code> DOM element\n * used for playing back audio only streams.\n * @return {Element} The dom element\n */\nMatrixCall.prototype.getRemoteAudioElement = function() {\n    return this.remoteAudioElement;\n};\n\n/**\n * Set the local <code>&lt;video&gt;</code> DOM element. If this call is active,\n * video will be rendered to it immediately.\n * @param {Element} element The <code>&lt;video&gt;</code> DOM element.\n */\nMatrixCall.prototype.setLocalVideoElement = function(element) {\n    this.localVideoElement = element;\n\n    if (element && this.localAVStream && this.type === 'video') {\n        element.autoplay = true;\n        this.assignElement(element, this.localAVStream, \"localVideo\");\n        element.muted = true;\n        const self = this;\n        setTimeout(function() {\n            const vel = self.getLocalVideoElement();\n            if (vel.play) {\n                self.playElement(vel, \"localVideo\");\n            }\n        }, 0);\n    }\n};\n\n/**\n * Set the remote <code>&lt;video&gt;</code> DOM element. If this call is active,\n * the first received video-capable stream will be rendered to it immediately.\n * @param {Element} element The <code>&lt;video&gt;</code> DOM element.\n */\nMatrixCall.prototype.setRemoteVideoElement = function(element) {\n    this.remoteVideoElement = element;\n    _tryPlayRemoteStream(this);\n};\n\n/**\n * Set the remote <code>&lt;audio&gt;</code> DOM element. If this call is active,\n * the first received audio-only stream will be rendered to it immediately.\n * The audio will *not* be rendered from the remoteVideoElement.\n * @param {Element} element The <code>&lt;video&gt;</code> DOM element.\n */\nMatrixCall.prototype.setRemoteAudioElement = function(element) {\n    this.remoteVideoElement.muted = true;\n    this.remoteAudioElement = element;\n    _tryPlayRemoteAudioStream(this);\n};\n\n/**\n * Configure this call from an invite event. Used by MatrixClient.\n * @protected\n * @param {MatrixEvent} event The m.call.invite event\n */\nMatrixCall.prototype._initWithInvite = function(event) {\n    this.msg = event.getContent();\n    this.peerConn = _createPeerConnection(this);\n    const self = this;\n    if (this.peerConn) {\n        this.peerConn.setRemoteDescription(\n            new this.webRtc.RtcSessionDescription(this.msg.offer),\n            hookCallback(self, self._onSetRemoteDescriptionSuccess),\n            hookCallback(self, self._onSetRemoteDescriptionError),\n        );\n    }\n    setState(this, 'ringing');\n    this.direction = 'inbound';\n\n    // firefox and OpenWebRTC's RTCPeerConnection doesn't add streams until it\n    // starts getting media on them so we need to figure out whether a video\n    // channel has been offered by ourselves.\n    if (\n        this.msg.offer &&\n        this.msg.offer.sdp &&\n        this.msg.offer.sdp.indexOf('m=video') > -1\n    ) {\n        this.type = 'video';\n    } else {\n        this.type = 'voice';\n    }\n\n    if (event.getAge()) {\n        setTimeout(function() {\n            if (self.state == 'ringing') {\n                debuglog(\"Call invite has expired. Hanging up.\");\n                self.hangupParty = 'remote'; // effectively\n                setState(self, 'ended');\n                stopAllMedia(self);\n                if (self.peerConn.signalingState != 'closed') {\n                    self.peerConn.close();\n                }\n                self.emit(\"hangup\", self);\n            }\n        }, this.msg.lifetime - event.getAge());\n    }\n};\n\n/**\n * Configure this call from a hangup event. Used by MatrixClient.\n * @protected\n * @param {MatrixEvent} event The m.call.hangup event\n */\nMatrixCall.prototype._initWithHangup = function(event) {\n    // perverse as it may seem, sometimes we want to instantiate a call with a\n    // hangup message (because when getting the state of the room on load, events\n    // come in reverse order and we want to remember that a call has been hung up)\n    this.msg = event.getContent();\n    setState(this, 'ended');\n};\n\n/**\n * Answer a call.\n */\nMatrixCall.prototype.answer = function() {\n    debuglog(\"Answering call %s of type %s\", this.callId, this.type);\n    const self = this;\n\n    if (!this.localAVStream && !this.waitForLocalAVStream) {\n        this.webRtc.getUserMedia(\n            _getUserMediaVideoContraints(this.type),\n            hookCallback(self, self._gotUserMediaForAnswer),\n            hookCallback(self, self._getUserMediaFailed),\n        );\n        setState(this, 'wait_local_media');\n    } else if (this.localAVStream) {\n        this._gotUserMediaForAnswer(this.localAVStream);\n    } else if (this.waitForLocalAVStream) {\n        setState(this, 'wait_local_media');\n    }\n};\n\n/**\n * Replace this call with a new call, e.g. for glare resolution. Used by\n * MatrixClient.\n * @protected\n * @param {MatrixCall} newCall The new call.\n */\nMatrixCall.prototype._replacedBy = function(newCall) {\n    debuglog(this.callId + \" being replaced by \" + newCall.callId);\n    if (this.state == 'wait_local_media') {\n        debuglog(\"Telling new call to wait for local media\");\n        newCall.waitForLocalAVStream = true;\n    } else if (this.state == 'create_offer') {\n        debuglog(\"Handing local stream to new call\");\n        newCall._gotUserMediaForAnswer(this.localAVStream);\n        delete(this.localAVStream);\n    } else if (this.state == 'invite_sent') {\n        debuglog(\"Handing local stream to new call\");\n        newCall._gotUserMediaForAnswer(this.localAVStream);\n        delete(this.localAVStream);\n    }\n    newCall.localVideoElement = this.localVideoElement;\n    newCall.remoteVideoElement = this.remoteVideoElement;\n    newCall.remoteAudioElement = this.remoteAudioElement;\n    this.successor = newCall;\n    this.emit(\"replaced\", newCall);\n    this.hangup(true);\n};\n\n/**\n * Hangup a call.\n * @param {string} reason The reason why the call is being hung up.\n * @param {boolean} suppressEvent True to suppress emitting an event.\n */\nMatrixCall.prototype.hangup = function(reason, suppressEvent) {\n    debuglog(\"Ending call \" + this.callId);\n    terminate(this, \"local\", reason, !suppressEvent);\n    const content = {\n        version: 0,\n        call_id: this.callId,\n        reason: reason,\n    };\n    sendEvent(this, 'm.call.hangup', content);\n};\n\n/**\n * Set whether the local video preview should be muted or not.\n * @param {boolean} muted True to mute the local video.\n */\nMatrixCall.prototype.setLocalVideoMuted = function(muted) {\n    if (!this.localAVStream) {\n        return;\n    }\n    setTracksEnabled(this.localAVStream.getVideoTracks(), !muted);\n};\n\n/**\n * Check if local video is muted.\n *\n * If there are multiple video tracks, <i>all</i> of the tracks need to be muted\n * for this to return true. This means if there are no video tracks, this will\n * return true.\n * @return {Boolean} True if the local preview video is muted, else false\n * (including if the call is not set up yet).\n */\nMatrixCall.prototype.isLocalVideoMuted = function() {\n    if (!this.localAVStream) {\n        return false;\n    }\n    return !isTracksEnabled(this.localAVStream.getVideoTracks());\n};\n\n/**\n * Set whether the microphone should be muted or not.\n * @param {boolean} muted True to mute the mic.\n */\nMatrixCall.prototype.setMicrophoneMuted = function(muted) {\n    if (!this.localAVStream) {\n        return;\n    }\n    setTracksEnabled(this.localAVStream.getAudioTracks(), !muted);\n};\n\n/**\n * Check if the microphone is muted.\n *\n * If there are multiple audio tracks, <i>all</i> of the tracks need to be muted\n * for this to return true. This means if there are no audio tracks, this will\n * return true.\n * @return {Boolean} True if the mic is muted, else false (including if the call\n * is not set up yet).\n */\nMatrixCall.prototype.isMicrophoneMuted = function() {\n    if (!this.localAVStream) {\n        return false;\n    }\n    return !isTracksEnabled(this.localAVStream.getAudioTracks());\n};\n\n/**\n * Internal\n * @private\n * @param {Object} stream\n */\nMatrixCall.prototype._gotUserMediaForInvite = function(stream) {\n    if (this.successor) {\n        this.successor._gotUserMediaForAnswer(stream);\n        return;\n    }\n    if (this.state == 'ended') {\n        return;\n    }\n    debuglog(\"_gotUserMediaForInvite -> \" + this.type);\n    const self = this;\n    const videoEl = this.getLocalVideoElement();\n\n    if (videoEl && this.type == 'video') {\n        videoEl.autoplay = true;\n        if (this.screenSharingStream) {\n            debuglog(\"Setting screen sharing stream to the local video element\");\n            this.assignElement(videoEl, this.screenSharingStream, \"localVideo\");\n        } else {\n            this.assignElement(videoEl, stream, \"localVideo\");\n        }\n        videoEl.muted = true;\n        setTimeout(function() {\n            const vel = self.getLocalVideoElement();\n            if (vel.play) {\n                self.playElement(vel, \"localVideo\");\n            }\n        }, 0);\n    }\n\n    if (this.screenSharingStream) {\n        this.screenSharingStream.addTrack(stream.getAudioTracks()[0]);\n        stream = this.screenSharingStream;\n    }\n\n    this.localAVStream = stream;\n    // why do we enable audio (and only audio) tracks here? -- matthew\n    setTracksEnabled(stream.getAudioTracks(), true);\n    this.peerConn = _createPeerConnection(this);\n    this.peerConn.addStream(stream);\n    this.peerConn.createOffer(\n        hookCallback(self, self._gotLocalOffer),\n        hookCallback(self, self._getLocalOfferFailed),\n    );\n    setState(self, 'create_offer');\n};\n\n/**\n * Internal\n * @private\n * @param {Object} stream\n */\nMatrixCall.prototype._gotUserMediaForAnswer = function(stream) {\n    const self = this;\n    if (self.state == 'ended') {\n        return;\n    }\n    const localVidEl = self.getLocalVideoElement();\n\n    if (localVidEl && self.type == 'video') {\n        localVidEl.autoplay = true;\n        this.assignElement(localVidEl, stream, \"localVideo\");\n        localVidEl.muted = true;\n        setTimeout(function() {\n            const vel = self.getLocalVideoElement();\n            if (vel.play) {\n                self.playElement(vel, \"localVideo\");\n            }\n        }, 0);\n    }\n\n    self.localAVStream = stream;\n    setTracksEnabled(stream.getAudioTracks(), true);\n    self.peerConn.addStream(stream);\n\n    const constraints = {\n        'mandatory': {\n            'OfferToReceiveAudio': true,\n            'OfferToReceiveVideo': self.type == 'video',\n        },\n    };\n    self.peerConn.createAnswer(function(description) {\n        debuglog(\"Created answer: \" + description);\n        self.peerConn.setLocalDescription(description, function() {\n            const content = {\n                version: 0,\n                call_id: self.callId,\n                answer: {\n                    sdp: self.peerConn.localDescription.sdp,\n                    type: self.peerConn.localDescription.type,\n                },\n            };\n            sendEvent(self, 'm.call.answer', content);\n            setState(self, 'connecting');\n        }, function() {\n            debuglog(\"Error setting local description!\");\n        }, constraints);\n    }, function(err) {\n        debuglog(\"Failed to create answer: \" + err);\n    });\n    setState(self, 'create_answer');\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._gotLocalIceCandidate = function(event) {\n    if (event.candidate) {\n        debuglog(\n            \"Got local ICE \" + event.candidate.sdpMid + \" candidate: \" +\n            event.candidate.candidate,\n        );\n        // As with the offer, note we need to make a copy of this object, not\n        // pass the original: that broke in Chrome ~m43.\n        const c = {\n            candidate: event.candidate.candidate,\n            sdpMid: event.candidate.sdpMid,\n            sdpMLineIndex: event.candidate.sdpMLineIndex,\n        };\n        sendCandidate(this, c);\n    }\n};\n\n/**\n * Used by MatrixClient.\n * @protected\n * @param {Object} cand\n */\nMatrixCall.prototype._gotRemoteIceCandidate = function(cand) {\n    if (this.state == 'ended') {\n        //debuglog(\"Ignoring remote ICE candidate because call has ended\");\n        return;\n    }\n    debuglog(\"Got remote ICE \" + cand.sdpMid + \" candidate: \" + cand.candidate);\n    this.peerConn.addIceCandidate(\n        new this.webRtc.RtcIceCandidate(cand),\n        function() {},\n        function(e) {},\n    );\n};\n\n/**\n * Used by MatrixClient.\n * @protected\n * @param {Object} msg\n */\nMatrixCall.prototype._receivedAnswer = function(msg) {\n    if (this.state == 'ended') {\n        return;\n    }\n\n    const self = this;\n    this.peerConn.setRemoteDescription(\n        new this.webRtc.RtcSessionDescription(msg.answer),\n        hookCallback(self, self._onSetRemoteDescriptionSuccess),\n        hookCallback(self, self._onSetRemoteDescriptionError),\n    );\n    setState(self, 'connecting');\n};\n\n/**\n * Internal\n * @private\n * @param {Object} description\n */\nMatrixCall.prototype._gotLocalOffer = function(description) {\n    const self = this;\n    debuglog(\"Created offer: \" + description);\n\n    if (self.state == 'ended') {\n        debuglog(\"Ignoring newly created offer on call ID \" + self.callId +\n            \" because the call has ended\");\n        return;\n    }\n\n    self.peerConn.setLocalDescription(description, function() {\n        const content = {\n            version: 0,\n            call_id: self.callId,\n            // OpenWebRTC appears to add extra stuff (like the DTLS fingerprint)\n            // to the description when setting it on the peerconnection.\n            // According to the spec it should only add ICE\n            // candidates. Any ICE candidates that have already been generated\n            // at this point will probably be sent both in the offer and separately.\n            // Also, note that we have to make a new object here, copying the\n            // type and sdp properties.\n            // Passing the RTCSessionDescription object as-is doesn't work in\n            // Chrome (as of about m43).\n            offer: {\n                sdp: self.peerConn.localDescription.sdp,\n                type: self.peerConn.localDescription.type,\n            },\n            lifetime: MatrixCall.CALL_TIMEOUT_MS,\n        };\n        sendEvent(self, 'm.call.invite', content);\n\n        setTimeout(function() {\n            if (self.state == 'invite_sent') {\n                self.hangup('invite_timeout');\n            }\n        }, MatrixCall.CALL_TIMEOUT_MS);\n        setState(self, 'invite_sent');\n    }, function() {\n        debuglog(\"Error setting local description!\");\n    });\n};\n\n/**\n * Internal\n * @private\n * @param {Object} error\n */\nMatrixCall.prototype._getLocalOfferFailed = function(error) {\n    this.emit(\n        \"error\",\n        callError(MatrixCall.ERR_LOCAL_OFFER_FAILED, \"Failed to start audio for call!\"),\n    );\n};\n\n/**\n * Internal\n * @private\n * @param {Object} error\n */\nMatrixCall.prototype._getUserMediaFailed = function(error) {\n    this.emit(\n        \"error\",\n        callError(\n            MatrixCall.ERR_NO_USER_MEDIA,\n            \"Couldn't start capturing media! Is your microphone set up and \" +\n            \"does this app have permission?\",\n        ),\n    );\n    this.hangup(\"user_media_failed\");\n};\n\n/**\n * Internal\n * @private\n */\nMatrixCall.prototype._onIceConnectionStateChanged = function() {\n    if (this.state == 'ended') {\n        return; // because ICE can still complete as we're ending the call\n    }\n    debuglog(\n        \"Ice connection state changed to: \" + this.peerConn.iceConnectionState,\n    );\n    // ideally we'd consider the call to be connected when we get media but\n    // chrome doesn't implement any of the 'onstarted' events yet\n    if (this.peerConn.iceConnectionState == 'completed' ||\n            this.peerConn.iceConnectionState == 'connected') {\n        setState(this, 'connected');\n        this.didConnect = true;\n    } else if (this.peerConn.iceConnectionState == 'failed') {\n        this.hangup('ice_failed');\n    }\n};\n\n/**\n * Internal\n * @private\n */\nMatrixCall.prototype._onSignallingStateChanged = function() {\n    debuglog(\n        \"call \" + this.callId + \": Signalling state changed to: \" +\n        this.peerConn.signalingState,\n    );\n};\n\n/**\n * Internal\n * @private\n */\nMatrixCall.prototype._onSetRemoteDescriptionSuccess = function() {\n    debuglog(\"Set remote description\");\n};\n\n/**\n * Internal\n * @private\n * @param {Object} e\n */\nMatrixCall.prototype._onSetRemoteDescriptionError = function(e) {\n    debuglog(\"Failed to set remote description\" + e);\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._onAddStream = function(event) {\n    debuglog(\"Stream id \" + event.stream.id + \" added\");\n\n    const s = event.stream;\n\n    if (s.getVideoTracks().length > 0) {\n        this.type = 'video';\n        this.remoteAVStream = s;\n        this.remoteAStream = s;\n    } else {\n        this.type = 'voice';\n        this.remoteAStream = s;\n    }\n\n    const self = this;\n    forAllTracksOnStream(s, function(t) {\n        debuglog(\"Track id \" + t.id + \" added\");\n        // not currently implemented in chrome\n        t.onstarted = hookCallback(self, self._onRemoteStreamTrackStarted);\n    });\n\n    if (event.stream.oninactive !== undefined) {\n        event.stream.oninactive = hookCallback(self, self._onRemoteStreamEnded);\n    } else {\n        // onended is deprecated from Chrome 54\n        event.stream.onended = hookCallback(self, self._onRemoteStreamEnded);\n    }\n\n    // not currently implemented in chrome\n    event.stream.onstarted = hookCallback(self, self._onRemoteStreamStarted);\n\n    if (this.type === 'video') {\n        _tryPlayRemoteStream(this);\n        _tryPlayRemoteAudioStream(this);\n    } else {\n        _tryPlayRemoteAudioStream(this);\n    }\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._onRemoteStreamStarted = function(event) {\n    setState(this, 'connected');\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._onRemoteStreamEnded = function(event) {\n    debuglog(\"Remote stream ended\");\n    this.hangupParty = 'remote';\n    setState(this, 'ended');\n    stopAllMedia(this);\n    if (this.peerConn.signalingState != 'closed') {\n        this.peerConn.close();\n    }\n    this.emit(\"hangup\", this);\n};\n\n/**\n * Internal\n * @private\n * @param {Object} event\n */\nMatrixCall.prototype._onRemoteStreamTrackStarted = function(event) {\n    setState(this, 'connected');\n};\n\n/**\n * Used by MatrixClient.\n * @protected\n * @param {Object} msg\n */\nMatrixCall.prototype._onHangupReceived = function(msg) {\n    debuglog(\"Hangup received\");\n    terminate(this, \"remote\", msg.reason, true);\n};\n\n/**\n * Used by MatrixClient.\n * @protected\n * @param {Object} msg\n */\nMatrixCall.prototype._onAnsweredElsewhere = function(msg) {\n    debuglog(\"Answered elsewhere\");\n    terminate(this, \"remote\", \"answered_elsewhere\", true);\n};\n\nconst setTracksEnabled = function(tracks, enabled) {\n    for (let i = 0; i < tracks.length; i++) {\n        tracks[i].enabled = enabled;\n    }\n};\n\nconst isTracksEnabled = function(tracks) {\n    for (let i = 0; i < tracks.length; i++) {\n        if (tracks[i].enabled) {\n            return true; // at least one track is enabled\n        }\n    }\n    return false;\n};\n\nconst setState = function(self, state) {\n    const oldState = self.state;\n    self.state = state;\n    self.emit(\"state\", state, oldState);\n};\n\n/**\n * Internal\n * @param {MatrixCall} self\n * @param {string} eventType\n * @param {Object} content\n * @return {Promise}\n */\nconst sendEvent = function(self, eventType, content) {\n    return self.client.sendEvent(self.roomId, eventType, content).catch(\n        (err) => {\n            self.emit('send_event_error', err);\n        },\n    );\n};\n\nconst sendCandidate = function(self, content) {\n    // Sends candidates with are sent in a special way because we try to amalgamate\n    // them into one message\n    self.candidateSendQueue.push(content);\n    if (self.candidateSendTries === 0) {\n        setTimeout(function() {\n            _sendCandidateQueue(self);\n        }, 100);\n    }\n};\n\nconst terminate = function(self, hangupParty, hangupReason, shouldEmit) {\n    if (self.getRemoteVideoElement()) {\n        if (self.getRemoteVideoElement().pause) {\n            self.pauseElement(self.getRemoteVideoElement(), \"remoteVideo\");\n        }\n        self.assignElement(self.getRemoteVideoElement(), null, \"remoteVideo\");\n    }\n    if (self.getRemoteAudioElement()) {\n        if (self.getRemoteAudioElement().pause) {\n            self.pauseElement(self.getRemoteAudioElement(), \"remoteAudio\");\n        }\n        self.assignElement(self.getRemoteAudioElement(), null, \"remoteAudio\");\n    }\n    if (self.getLocalVideoElement()) {\n        if (self.getLocalVideoElement().pause) {\n            self.pauseElement(self.getLocalVideoElement(), \"localVideo\");\n        }\n        self.assignElement(self.getLocalVideoElement(), null, \"localVideo\");\n    }\n    self.hangupParty = hangupParty;\n    self.hangupReason = hangupReason;\n    setState(self, 'ended');\n    stopAllMedia(self);\n    if (self.peerConn && self.peerConn.signalingState !== 'closed') {\n        self.peerConn.close();\n    }\n    if (shouldEmit) {\n        self.emit(\"hangup\", self);\n    }\n};\n\nconst stopAllMedia = function(self) {\n    debuglog(\"stopAllMedia (stream=%s)\", self.localAVStream);\n    if (self.localAVStream) {\n        forAllTracksOnStream(self.localAVStream, function(t) {\n            if (t.stop) {\n                t.stop();\n            }\n        });\n        // also call stop on the main stream so firefox will stop sharing\n        // the mic\n        if (self.localAVStream.stop) {\n            self.localAVStream.stop();\n        }\n    }\n    if (self.screenSharingStream) {\n        forAllTracksOnStream(self.screenSharingStream, function(t) {\n            if (t.stop) {\n                t.stop();\n            }\n        });\n        if (self.screenSharingStream.stop) {\n            self.screenSharingStream.stop();\n        }\n    }\n    if (self.remoteAVStream) {\n        forAllTracksOnStream(self.remoteAVStream, function(t) {\n            if (t.stop) {\n                t.stop();\n            }\n        });\n    }\n    if (self.remoteAStream) {\n        forAllTracksOnStream(self.remoteAStream, function(t) {\n            if (t.stop) {\n                t.stop();\n            }\n        });\n    }\n};\n\nconst _tryPlayRemoteStream = function(self) {\n    if (self.getRemoteVideoElement() && self.remoteAVStream) {\n        const player = self.getRemoteVideoElement();\n        player.autoplay = true;\n        self.assignElement(player, self.remoteAVStream, \"remoteVideo\");\n        setTimeout(function() {\n            const vel = self.getRemoteVideoElement();\n            if (vel.play) {\n                self.playElement(vel, \"remoteVideo\");\n            }\n            // OpenWebRTC does not support oniceconnectionstatechange yet\n            if (self.webRtc.isOpenWebRTC()) {\n                setState(self, 'connected');\n            }\n        }, 0);\n    }\n};\n\nconst _tryPlayRemoteAudioStream = function(self) {\n    if (self.getRemoteAudioElement() && self.remoteAStream) {\n        const player = self.getRemoteAudioElement();\n        player.autoplay = true;\n        self.assignElement(player, self.remoteAStream, \"remoteAudio\");\n        setTimeout(function() {\n            const ael = self.getRemoteAudioElement();\n            if (ael.play) {\n                self.playElement(ael, \"remoteAudio\");\n            }\n            // OpenWebRTC does not support oniceconnectionstatechange yet\n            if (self.webRtc.isOpenWebRTC()) {\n                setState(self, 'connected');\n            }\n        }, 0);\n    }\n};\n\nconst checkForErrorListener = function(self) {\n    if (self.listeners(\"error\").length === 0) {\n        throw new Error(\n            \"You MUST attach an error listener using call.on('error', function() {})\",\n        );\n    }\n};\n\nconst callError = function(code, msg) {\n    const e = new Error(msg);\n    e.code = code;\n    return e;\n};\n\nconst debuglog = function() {\n    if (DEBUG) {\n        console.log(...arguments);\n    }\n};\n\nconst _sendCandidateQueue = function(self) {\n    if (self.candidateSendQueue.length === 0) {\n        return;\n    }\n\n    const cands = self.candidateSendQueue;\n    self.candidateSendQueue = [];\n    ++self.candidateSendTries;\n    const content = {\n        version: 0,\n        call_id: self.callId,\n        candidates: cands,\n    };\n    debuglog(\"Attempting to send \" + cands.length + \" candidates\");\n    sendEvent(self, 'm.call.candidates', content).then(function() {\n        self.candidateSendTries = 0;\n        _sendCandidateQueue(self);\n    }, function(error) {\n        for (let i = 0; i < cands.length; i++) {\n            self.candidateSendQueue.push(cands[i]);\n        }\n\n        if (self.candidateSendTries > 5) {\n            debuglog(\n                \"Failed to send candidates on attempt %s. Giving up for now.\",\n                self.candidateSendTries,\n            );\n            self.candidateSendTries = 0;\n            return;\n        }\n\n        const delayMs = 500 * Math.pow(2, self.candidateSendTries);\n        ++self.candidateSendTries;\n        debuglog(\"Failed to send candidates. Retrying in \" + delayMs + \"ms\");\n        setTimeout(function() {\n            _sendCandidateQueue(self);\n        }, delayMs);\n    });\n};\n\nconst _placeCallWithConstraints = function(self, constraints) {\n    self.client.callList[self.callId] = self;\n    self.webRtc.getUserMedia(\n        constraints,\n        hookCallback(self, self._gotUserMediaForInvite),\n        hookCallback(self, self._getUserMediaFailed),\n    );\n    setState(self, 'wait_local_media');\n    self.direction = 'outbound';\n    self.config = constraints;\n};\n\nconst _createPeerConnection = function(self) {\n    let servers = self.turnServers;\n    if (self.webRtc.vendor === \"mozilla\") {\n        // modify turnServers struct to match what mozilla expects.\n        servers = [];\n        for (let i = 0; i < self.turnServers.length; i++) {\n            for (let j = 0; j < self.turnServers[i].urls.length; j++) {\n                servers.push({\n                    url: self.turnServers[i].urls[j],\n                    username: self.turnServers[i].username,\n                    credential: self.turnServers[i].credential,\n                });\n            }\n        }\n    }\n\n    const pc = new self.webRtc.RtcPeerConnection({\n        iceServers: servers,\n    });\n    pc.oniceconnectionstatechange = hookCallback(self, self._onIceConnectionStateChanged);\n    pc.onsignalingstatechange = hookCallback(self, self._onSignallingStateChanged);\n    pc.onicecandidate = hookCallback(self, self._gotLocalIceCandidate);\n    pc.onaddstream = hookCallback(self, self._onAddStream);\n    return pc;\n};\n\nconst _getChromeScreenSharingConstraints = function(call) {\n    const screen = global.screen;\n    if (!screen) {\n        call.emit(\"error\", callError(\n            MatrixCall.ERR_NO_USER_MEDIA,\n            \"Couldn't determine screen sharing constaints.\",\n        ));\n        return;\n    }\n\n    return {\n        video: {\n            mandatory: {\n                chromeMediaSource: \"screen\",\n                chromeMediaSourceId: \"\" + Date.now(),\n                maxWidth: screen.width,\n                maxHeight: screen.height,\n                minFrameRate: 1,\n                maxFrameRate: 10,\n            },\n        },\n    };\n};\n\nconst _getUserMediaVideoContraints = function(callType) {\n    switch (callType) {\n        case 'voice':\n            return ({audio: true, video: false});\n        case 'video':\n            return ({audio: true, video: {\n                mandatory: {\n                    minWidth: 640,\n                    maxWidth: 640,\n                    minHeight: 360,\n                    maxHeight: 360,\n                },\n            }});\n    }\n};\n\nconst hookCallback = function(call, fn) {\n    return function() {\n        return fn.apply(call, arguments);\n    };\n};\n\nconst forAllVideoTracksOnStream = function(s, f) {\n    const tracks = s.getVideoTracks();\n    for (let i = 0; i < tracks.length; i++) {\n        f(tracks[i]);\n    }\n};\n\nconst forAllAudioTracksOnStream = function(s, f) {\n    const tracks = s.getAudioTracks();\n    for (let i = 0; i < tracks.length; i++) {\n        f(tracks[i]);\n    }\n};\n\nconst forAllTracksOnStream = function(s, f) {\n    forAllVideoTracksOnStream(s, f);\n    forAllAudioTracksOnStream(s, f);\n};\n\n/** The MatrixCall class. */\nmodule.exports.MatrixCall = MatrixCall;\n\n\n/**\n * Create a new Matrix call for the browser.\n * @param {MatrixClient} client The client instance to use.\n * @param {string} roomId The room the call is in.\n * @return {MatrixCall} the call or null if the browser doesn't support calling.\n */\nmodule.exports.createNewMatrixCall = function(client, roomId) {\n    const w = global.window;\n    const doc = global.document;\n    if (!w || !doc) {\n        return null;\n    }\n    const webRtc = {};\n    webRtc.isOpenWebRTC = function() {\n        const scripts = doc.getElementById(\"script\");\n        if (!scripts || !scripts.length) {\n            return false;\n        }\n        for (let i = 0; i < scripts.length; i++) {\n            if (scripts[i].src.indexOf(\"owr.js\") > -1) {\n                return true;\n            }\n        }\n        return false;\n    };\n    const getUserMedia = (\n        w.navigator.getUserMedia || w.navigator.webkitGetUserMedia ||\n        w.navigator.mozGetUserMedia\n    );\n    if (getUserMedia) {\n        webRtc.getUserMedia = function() {\n            return getUserMedia.apply(w.navigator, arguments);\n        };\n    }\n    webRtc.RtcPeerConnection = (\n        w.RTCPeerConnection || w.webkitRTCPeerConnection || w.mozRTCPeerConnection\n    );\n    webRtc.RtcSessionDescription = (\n        w.RTCSessionDescription || w.webkitRTCSessionDescription ||\n        w.mozRTCSessionDescription\n    );\n    webRtc.RtcIceCandidate = (\n        w.RTCIceCandidate || w.webkitRTCIceCandidate || w.mozRTCIceCandidate\n    );\n    webRtc.vendor = null;\n    if (w.mozRTCPeerConnection) {\n        webRtc.vendor = \"mozilla\";\n    } else if (w.webkitRTCPeerConnection) {\n        webRtc.vendor = \"webkit\";\n    } else if (w.RTCPeerConnection) {\n        webRtc.vendor = \"generic\";\n    }\n    if (!webRtc.RtcIceCandidate || !webRtc.RtcSessionDescription ||\n            !webRtc.RtcPeerConnection || !webRtc.getUserMedia) {\n        return null; // WebRTC is not supported.\n    }\n    const opts = {\n        webRtc: webRtc,\n        client: client,\n        URL: w.URL,\n        roomId: roomId,\n        turnServers: client.getTurnServers(),\n    };\n    return new MatrixCall(opts);\n};\n"]}