diff --git a/lib/sync.js b/lib/sync.js
index e4086a9..c514a86 100644
--- a/lib/sync.js
+++ b/lib/sync.js
@@ -481,6 +481,9 @@ SyncApi.prototype._sync = function(syncOptions) {
         filter: filterId,
         timeout: this.opts.pollTimeout,
     };
+    if (syncOptions.timeout !== undefined) {
+        qps.timeout = syncOptions.timeout;
+    };
 
     if (syncToken) {
         qps.since = syncToken;
@@ -501,6 +504,9 @@ SyncApi.prototype._sync = function(syncOptions) {
 
     // normal timeout= plus buffer time
     var clientSideTimeoutMs = this.opts.pollTimeout + BUFFER_PERIOD_MS;
+    if (syncOptions.clientTimeout !== undefined) {
+        clientSideTimeoutMs = syncOptions.clientTimeout;
+    }
 
     this._currentSyncRequest = client._http.authedRequest(
         undefined, "GET", "/sync", qps, undefined, clientSideTimeoutMs
@@ -556,8 +562,16 @@ SyncApi.prototype._sync = function(syncOptions) {
             //   - Intermediate proxies restarting.
             //   - Device network changes.
             // Should we emit a state like "MAYBE_CONNETION_LOST"?
+            // We use a much shorter timeout for this query because otherwise
+            // we'll have to wait for the full client timeout duration before
+            // we realise there's a problem, and that's quite a long time.
+            // it will take us a long time to 
             self._syncConnectionLost = true;
-            self._sync(syncOptions);
+            var one_time_options = Object.assign({}, syncOptions, {
+                timeout: 2000,
+                clientTimeout: 4000,
+            });
+            self._sync(one_time_options);
         } else {
             debuglog("Starting keep-alive");
             self._syncConnectionLost = true;
